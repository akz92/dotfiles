# Autogenerated config.py
# Documentation:
#   qute://help/configuring.html
#   qute://help/settings.html

# Uncomment this to still load settings configured via autoconfig.yml
# config.load_autoconfig()

# Background color of the completion widget category headers.
# Type: QssColor
c.colors.completion.category.bg = '#6f7783'

# Bottom border color of the completion widget category headers.
# Type: QssColor
c.colors.completion.category.border.bottom = '#6f7783'

# Top border color of the completion widget category headers.
# Type: QssColor
c.colors.completion.category.border.top = '#6f7783'

# Background color of the completion widget for even rows.
# Type: QssColor
c.colors.completion.even.bg = '#4a515d'

# Background color of the selected completion item.
# Type: QssColor
c.colors.completion.item.selected.bg = '#383c46'

# Bottom border color of the selected completion item.
# Type: QssColor
c.colors.completion.item.selected.border.bottom = '#383c46'

# Top border color of the completion widget category headers.
# Type: QssColor
c.colors.completion.item.selected.border.top = '#383c46'

# Foreground color of the selected completion item.
# Type: QtColor
c.colors.completion.item.selected.fg = '#fff'

# Foreground color of the matched text in the completion.
# Type: QssColor
c.colors.completion.match.fg = '#afe785'

# Background color of the completion widget for odd rows.
# Type: QssColor
c.colors.completion.odd.bg = '#4a515d'

# Background color for hints. Note that you can use a `rgba(...)` value
# for transparency.
# Type: QssColor
c.colors.hints.bg = '#feda31'

# Font color for hints.
# Type: QssColor
c.colors.hints.fg = '#4a400e'

# Font color for the matched part of hints.
# Type: QssColor
c.colors.hints.match.fg = '#dcbc2a'

# Background color of the keyhint widget.
# Type: QssColor
c.colors.keyhint.bg = 'rgba(0, 0, 0, 65%)'

# Highlight color for keys to complete the current keychain.
# Type: QssColor
c.colors.keyhint.suffix.fg = '#FFFF00'

# Background color of the statusbar in command mode.
# Type: QssColor
c.colors.statusbar.command.bg = '#383c46'

# Background color of the statusbar in insert mode.
# Type: QssColor
c.colors.statusbar.insert.bg = '#689F38'

# Background color of the statusbar.
# Type: QssColor
c.colors.statusbar.normal.bg = '#383c46'

# Foreground color of the statusbar.
# Type: QssColor
c.colors.statusbar.normal.fg = 'white'

# Foreground color of the URL in the statusbar for hovered links.
# Type: QssColor
c.colors.statusbar.url.hover.fg = '#81D4FA'

# Foreground color of the URL in the statusbar on successful load
# (http).
# Type: QssColor
c.colors.statusbar.url.success.http.fg = '#9CCC65'

# Foreground color of the URL in the statusbar on successful load
# (https).
# Type: QssColor
c.colors.statusbar.url.success.https.fg = '#9CCC65'

# Foreground color of the URL in the statusbar when there's a warning.
# Type: QssColor
c.colors.statusbar.url.warn.fg = '#039BE5'

# Background color of unselected even tabs.
# Type: QtColor
c.colors.tabs.even.bg = '#6f7783'

# Background color of unselected odd tabs.
# Type: QtColor
c.colors.tabs.odd.bg = '#383c46'

# The height of the completion, in px or as percentage of the window.
# Type: PercOrInt
c.completion.height = '50%'

# Shrink the completion to be smaller than the configured size if there
# are no scrollbars.
# Type: Bool
c.completion.shrink = False

# Whether quitting the application requires a confirmation.
# Type: ConfirmQuit
# Valid values:
#   - always: Always show a confirmation.
#   - multiple-tabs: Show a confirmation if multiple tabs are opened.
#   - downloads: Show a confirmation if downloads are running
#   - never: Never show a confirmation.
c.confirm_quit = ['never']

# Enables or disables plugins in Web pages.
# Type: Bool
c.content.plugins = True

# Font used in the completion categories.
# Type: Font
c.fonts.completion.category = 'bold 10pt Monaco'

# Font used in the completion widget.
# Type: Font
c.fonts.completion.entry = '10pt Monaco'

# Font used for the debugging console.
# Type: QtFont
c.fonts.debug_console = '10pt Monaco'

# Font used for the downloadbar.
# Type: Font
c.fonts.downloads = '10pt Monaco'

# Font used for the hints.
# Type: Font
c.fonts.hints = 'bold 10pt Monaco'

# Font used in the keyhint widget.
# Type: Font
c.fonts.keyhint = '10pt Monaco'

# Font used for error messages.
# Type: Font
c.fonts.messages.error = '10pt Monaco'

# Font used for info messages.
# Type: Font
c.fonts.messages.info = '10pt Monaco'

# Font used for warning messages.
# Type: Font
c.fonts.messages.warning = '10pt Monaco'

# Font used in the statusbar.
# Type: Font
c.fonts.statusbar = '10pt Monaco'

# Font used in the tab bar.
# Type: QtFont
c.fonts.tabs = '10pt Monaco'

# The default font size for regular text.
# Type: Int
c.fonts.web.size.default = 16

# CSS border value for hints.
# Type: String
c.hints.border = '2px solid #feda31'

# Chars used for hint strings.
# Type: UniqueCharString
c.hints.chars = 'arstdhneio'

# Make chars in hint strings uppercase.
# Type: Bool
c.hints.uppercase = True

# Additional arguments to pass to Qt, without leading `--`. With
# QtWebEngine, some Chromium arguments (see
# https://peter.sh/experiments/chromium-command-line-switches/ for a
# list) will work. This setting requires a restart.
# Type: List of String
c.qt.args = ['debug']

# Hide the statusbar unless a message is shown.
# Type: Bool
c.statusbar.hide = False

# Padding for the statusbar.
# Type: Padding
c.statusbar.padding = {'top': 5, 'bottom': 5, 'right': 5, 'left': 5}

# Scaling for favicons in the tab bar. The tab size is unchanged, so big
# favicons also require extra `tabs.padding`.
# Type: Float
c.tabs.favicons.scale = 1.5

# Padding around text for tabs
# Type: Padding
c.tabs.padding = {'top': 5, 'bottom': 5, 'left': 5, 'right': 5}

# When to show the tab bar.
# Type: String
# Valid values:
#   - always: Always show the tab bar.
#   - never: Always hide the tab bar.
#   - multiple: Hide the tab bar if only one tab is open.
#   - switching: Show the tab bar when switching tabs.
c.tabs.show = 'always'

# Width of the progress indicator (0 to disable).
# Type: Int
c.tabs.width.indicator = 0

# The page to open if :open -t/-b/-w is used without URL. Use
# `about:blank` for a blank page.
# Type: FuzzyUrl
c.url.default_page = 'http://google.com'

# Definitions of search engines which can be used via the address bar.
# Maps a searchengine name (such as `DEFAULT`, or `ddg`) to a URL with a
# `{}` placeholder. The placeholder will be replaced by the search term,
# use `{{` and `}}` for literal `{`/`}` signs. The searchengine named
# `DEFAULT` is used when `url.auto_search` is turned on and something
# else than a URL was entered to be opened. Other search engines can be
# used by prepending the search engine name to the search term, e.g.
# `:open google qutebrowser`.
# Type: Dict
c.url.searchengines = {'DEFAULT': 'https://google.com/search?q={}', 'y': 'http://www.youtube.com/results?search_query={}'}

# Bindings for normal mode
config.bind(',g', 'quickmark-load gmail')
config.bind(',m', 'quickmark-load meucontroledeponto')
config.bind(';p', 'hint links fill :open -p {hint-url}')
config.bind('<ctrl+w>', 'close')
config.bind('J', 'tab-prev')
config.bind('K', 'tab-next')
config.bind('lw', 'session-load work ;; window-only')